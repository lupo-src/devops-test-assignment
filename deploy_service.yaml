- name: Installing docker
  become: yes
  become_method: sudo
  hosts: linux
  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes
    
    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']
    
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    
    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
    
    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest
    
    - name: Downloading pip installer
      get_url:
        url: https://bootstrap.pypa.io/get-pip.py
        dest: ./get-pip.py

    - name: Installing PIP
      shell: python get-pip.py

    - name: Install Docker Module for Python
      pip:
        name: docker

- name: Deploy Python service on Linux
  hosts: linux
  become: yes
  become_method: sudo
  tasks:
    - name: Checkout GIT repo
      git:
        repo: https://github.com/lupo-src/devops-test-assignment.git
        dest: ./devops-test-assignment
    - name: Build docker image
      docker_image:
        name: python_service
        path: ./devops-test-assignment
    - name: Start docker container
      docker_container:
        name: python_service_run
        image: python_service

- name: Deploy Python service on Windows
  hosts: windows
  gather_facts: no
  tasks:
    - name: Creating ansible directory
      win_file:
        path: C:\ansible
        state: directory
    - name: Creating python script on remote host
      win_copy:
        src: ./service_code.py
        dest: C:\ansible\service_code.py
    - name: Installing Python
      win_chocolatey:
        name: python2
        state: latest
    - name: Installing NSSM
      win_chocolatey:
        name: nssm
        state: latest
    - name: Install the service with python code
      win_nssm:
        name: python_service
        application: C:\Python27\python.exe
        arguments:
          - C:\ansible\service_code.py
    - name: Start the service
      win_service:
        name: python_service
        state: started
